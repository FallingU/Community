package life.fallingu.commuity.commuity.mapper;

import java.util.List;

import life.fallingu.commuity.commuity.dto.QuestionDTO;
import life.fallingu.commuity.commuity.pojo.Question;
import life.fallingu.commuity.commuity.pojo.QuestionExample;
import org.apache.ibatis.annotations.*;
@Mapper
public interface QuestionMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table question
     *
     * @mbggenerated Fri Mar 11 14:43:04 CST 2022
     */
    int countByExample(QuestionExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table question
     *
     * @mbggenerated Fri Mar 11 14:43:04 CST 2022
     */
    int deleteByExample(QuestionExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table question
     *
     * @mbggenerated Fri Mar 11 14:43:04 CST 2022
     */
    int deleteByPrimaryKey(Integer id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table question
     *
     * @mbggenerated Fri Mar 11 14:43:04 CST 2022
     */
    int insert(Question record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table question
     *
     * @mbggenerated Fri Mar 11 14:43:04 CST 2022
     */
    int insertSelective(Question record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table question
     *
     * @mbggenerated Fri Mar 11 14:43:04 CST 2022
     */
    List<Question> selectByExampleWithBLOBs(QuestionExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table question
     *
     * @mbggenerated Fri Mar 11 14:43:04 CST 2022
     */
    List<Question> selectByExample(QuestionExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table question
     *
     * @mbggenerated Fri Mar 11 14:43:04 CST 2022
     */
    Question selectByPrimaryKey(Integer id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table question
     *
     * @mbggenerated Fri Mar 11 14:43:04 CST 2022
     */
    int updateByExampleSelective(@Param("record") Question record, @Param("example") QuestionExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table question
     *
     * @mbggenerated Fri Mar 11 14:43:04 CST 2022
     */
    int updateByExampleWithBLOBs(@Param("record") Question record, @Param("example") QuestionExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table question
     *
     * @mbggenerated Fri Mar 11 14:43:04 CST 2022
     */
    int updateByExample(@Param("record") Question record, @Param("example") QuestionExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table question
     *
     * @mbggenerated Fri Mar 11 14:43:04 CST 2022
     */
    int updateByPrimaryKeySelective(Question record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table question
     *
     * @mbggenerated Fri Mar 11 14:43:04 CST 2022
     */
    int updateByPrimaryKeyWithBLOBs(Question record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table question
     *
     * @mbggenerated Fri Mar 11 14:43:04 CST 2022
     */
    int updateByPrimaryKey(Question record);
    @Select(value = "select * from question")
    @Results(id = "questionDtoModelMap",value = {
            @Result(column = "id",property = "id"),
            @Result(column = "title",property = "title"),
            @Result(column = "description",property = "description"),
            @Result(column = "gmt_create",property = "gmtCreate"),
            @Result(column = "gmt_modified",property = "gmtModified"),
            @Result(column = "creator",property = "creator"),
            @Result(column = "comment_count",property = "commentCount"),
            @Result(column = "view_count",property = "viewCount"),
            @Result(column = "like_count",property = "likeCount"),
            @Result(column = "tag",property = "tag"),
            @Result(property = "user",
                    column = "creator",
                    one=@One(select = "life.fallingu.commuity.commuity.mapper.UserMapper.selectByPrimaryKey"))
    })
    List<QuestionDTO> list();

    @Select(value = "select * from question where creator=#{id}")
    @ResultMap(value = "questionDtoModelMap")
    List<QuestionDTO> listByUserId(@Param("id") Integer id);

    @Select(value = "select * from question where id = #{id}")
    @ResultMap(value = "questionDtoModelMap")
    QuestionDTO findById(@Param("id") Integer id);

    @Update(value = "update question set view_count = view_count +1 where id=#{id}")
    int incrById(@Param("id") Integer id);
}